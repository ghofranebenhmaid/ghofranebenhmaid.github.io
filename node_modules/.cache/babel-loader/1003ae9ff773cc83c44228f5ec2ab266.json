{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/CustomCursor/CustomCursor.jsx\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { motion, useMotionValue } from \"framer-motion\";\n\nconst CustomCursor = () => {\n  const cursorRef = useRef();\n\n  const _useState = useState({\n    x: -100,\n    y: -100\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        cursorXY = _useState2[0],\n        setCursorXY = _useState2[1];\n\n  useEffect(() => {\n    const moveCursor = e => {\n      const x = e.clientX - 16;\n      const y = e.clientY - 16;\n      setCursorXY({\n        x,\n        y\n      });\n    };\n  }, []);\n  useEffect(() => {\n    const moveCursor = e => {};\n\n    window.addEventListener('mousemove', moveCursor);\n    return () => {\n      window.removeEventListener('mousemove', moveCursor);\n    };\n  }, []); // useEffect(() =>\n  // {\n  //     document.addEventListener('mousemove', (e) =>\n  //     {\n  //         const { clientX, clientY } = e;\n  //         const mouseX = clientX - cursorRef.current.clientWidth / 2;\n  //         const mouseY = clientY - cursorRef.current.clientHeight / 2;\n  //         // cursorRef.current.style.transform = `translate3d(${ mouseX }px, ${ mouseY }px, 0)`;\n  //     cursorRef.current.setAttribute('style', `top:${ mouseY }px; left:${ mouseX }px;`);\n  // })\n  // }, [])\n\n  return React.createElement(motion.div, {\n    className: \"cursor\",\n    ref: cursorRef,\n    style: {\n      transform: \"translate3d(\".concat(cursorXY.x, \"px, \").concat(cursorXY.y, \"px, 0)\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n};\n\nexport default CustomCursor;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/CustomCursor/CustomCursor.jsx"],"names":["React","useRef","useState","useEffect","motion","useMotionValue","CustomCursor","cursorRef","x","y","cursorXY","setCursorXY","moveCursor","e","clientX","clientY","window","addEventListener","removeEventListener","transform"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAqBC,QAArB,EAA+BC,SAA/B,QAA+C,OAA/C;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,eAAvC;;AACA,MAAMC,YAAY,GAAG,MACrB;AAEI,QAAMC,SAAS,GAAGN,MAAM,EAAxB;;AAFJ,oBAIoCC,QAAQ,CAAC;AAAEM,IAAAA,CAAC,EAAE,CAAC,GAAN;AAAWC,IAAAA,CAAC,EAAE,CAAC;AAAf,GAAD,CAJ5C;AAAA;AAAA,QAIWC,QAJX;AAAA,QAIqBC,WAJrB;;AAOIR,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,UAAU,GAAIC,CAAD,IAAO;AACxB,YAAML,CAAC,GAAGK,CAAC,CAACC,OAAF,GAAY,EAAtB;AACA,YAAML,CAAC,GAAGI,CAAC,CAACE,OAAF,GAAY,EAAtB;AACAJ,MAAAA,WAAW,CAAC;AAAEH,QAAAA,CAAF;AAAKC,QAAAA;AAAL,OAAD,CAAX;AACD,KAJD;AAKA,GANQ,EAMN,EANM,CAAT;AAQCN,EAAAA,SAAS,CAAC,MAAM;AACjB,UAAMS,UAAU,GAAIC,CAAD,IAAO,CAAG,CAA7B;;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCL,UAArC;AACA,WAAO,MAAM;AACXI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCN,UAAxC;AACD,KAFD;AAGD,GANW,EAMT,EANS,CAAT,CAfL,CAuBI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;;AAIA,SAGI,oBAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,SAAS,EAAC,QAAtB;AAA+B,IAAA,GAAG,EAAGL,SAArC;AACA,IAAA,KAAK,EAAE;AACXY,MAAAA,SAAS,wBAAiBT,QAAQ,CAACF,CAA1B,iBAAkCE,QAAQ,CAACD,CAA3C;AADE,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ;AAYH,CArDD;;AAuDA,eAAeH,YAAf","sourcesContent":["import React,{useRef,useState, useEffect} from 'react'\nimport { motion, useMotionValue } from \"framer-motion\"\nconst CustomCursor = () =>\n{\n    \n    const cursorRef = useRef();\n\n    const [cursorXY, setCursorXY] = useState({ x: -100, y: -100 })\n \n\n    useEffect(() => {\n     const moveCursor = (e) => {\n       const x = e.clientX - 16\n       const y = e.clientY - 16\n       setCursorXY({ x, y })\n     }\n    }, [])\n\n     useEffect(() => {\n    const moveCursor = (e) => { }\n    window.addEventListener('mousemove', moveCursor)\n    return () => {\n      window.removeEventListener('mousemove', moveCursor)\n    }\n  }, [])\n    \n    // useEffect(() =>\n    // {\n    //     document.addEventListener('mousemove', (e) =>\n    //     {\n    //         const { clientX, clientY } = e;\n    //         const mouseX = clientX - cursorRef.current.clientWidth / 2;\n    //         const mouseY = clientY - cursorRef.current.clientHeight / 2;\n\n    //         // cursorRef.current.style.transform = `translate3d(${ mouseX }px, ${ mouseY }px, 0)`;\n    //     cursorRef.current.setAttribute('style', `top:${ mouseY }px; left:${ mouseX }px;`);\n\n            \n    // })\n    // }, [])\n    \n \n    \n    return (\n\n\n        <motion.div className='cursor' ref={ cursorRef }\n        style={{\n    transform: `translate3d(${cursorXY.x}px, ${cursorXY.y}px, 0)`,\n  }}\n\n        />\n            \n        \n    )\n}\n\nexport default CustomCursor\n"]},"metadata":{},"sourceType":"module"}