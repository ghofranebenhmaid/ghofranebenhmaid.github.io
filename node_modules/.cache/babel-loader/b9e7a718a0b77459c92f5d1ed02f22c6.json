{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Repositories/Repositories.component.js\";\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Card/Card.component';\n\nconst Repositories = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        repositories = _useState4[0],\n        setRepositories = _useState4[1];\n\n  useEffect(() => {\n    (async () => {\n      const url = 'https://api.github.com/users/ghofranebenhmaid/repos';\n      setIsLoading(true);\n      const response = await fetch(url);\n\n      const _ref = await response.json(),\n            jsonResponse = _ref.repositories;\n\n      setRepositories(jsonResponse);\n      console.log(jsonResponse);\n      setIsLoading(false);\n    })();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"tiles container  flex--wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, isLoading && 'Loading...', !isLoading && repositories.length === 0 && 'Sorry, nothing found.');\n};\n\nexport default Repositories;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Repositories/Repositories.component.js"],"names":["React","useEffect","useState","Card","Repositories","isLoading","setIsLoading","repositories","setRepositories","url","response","fetch","json","jsonResponse","console","log","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAGA,MAAMC,YAAY,GAAG,MACrB;AAAA,oBACsCF,QAAQ,CAAC,IAAD,CAD9C;AAAA;AAAA,QACWG,SADX;AAAA,QACsBC,YADtB;;AAAA,qBAE4CJ,QAAQ,CAAC,EAAD,CAFpD;AAAA;AAAA,QAEWK,YAFX;AAAA,QAEyBC,eAFzB;;AAIIP,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YACD;AACF,YAAMQ,GAAG,GAAG,qDAAZ;AAEGH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;AAJD,mBAKwC,MAAMC,QAAQ,CAACE,IAAT,EAL9C;AAAA,YAKuBC,YALvB,QAKSN,YALT;;AAMCC,MAAAA,eAAe,CAACK,YAAD,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACF,KAVC;AAWH,GAZQ,EAYN,EAZM,CAAT;AAcA,SACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SAAS,IAAI,YADlB,EAEE,CAACA,SAAD,IAAcE,YAAY,CAACS,MAAb,KAAwB,CAAtC,IAA2C,uBAF7C,CADJ;AAgBH,CAnCD;;AAqCA,eAAeZ,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from '../Card/Card.component';\n\n\nconst Repositories = () =>\n{\n    const [isLoading, setIsLoading] = useState(true);\n    const [repositories, setRepositories] = useState([]);\n    \n    useEffect(() => {\n        (async () =>\n        {\n      const url = 'https://api.github.com/users/ghofranebenhmaid/repos';\n          \n         setIsLoading(true);\n         const response = await fetch(url);\n         const { repositories: jsonResponse } = await response.json();\n         setRepositories(jsonResponse);\n         console.log(jsonResponse);\n         setIsLoading(false);\n      })();\n    }, []);\n    \n    return (\n        <div className='tiles container  flex--wrap'>\n            {isLoading && 'Loading...' }\n         {!isLoading && repositories.length === 0 && 'Sorry, nothing found.'}\n            {/* {repositories.length > 0 &&\n            repositories.map((data, index) => (\n               <Card\n                  key={index}\n                   image={data.image}\n                   title={data.title}\n                   discription={data.discription}\n                   goto={data.href}\n               />\n            ))} */}\n        </div>\n    )\n}\n\nexport default Repositories\n"]},"metadata":{},"sourceType":"module"}