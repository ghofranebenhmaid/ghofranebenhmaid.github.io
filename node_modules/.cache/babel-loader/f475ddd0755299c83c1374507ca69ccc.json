{"ast":null,"code":"var _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Sections/Section.component.js\";\nimport React, { useRef } from 'react';\nimport gsap from 'gsap';\nimport { handleServesReturn, handleServes } from './Animation';\nimport Title from '../Title/Title';\nimport photography from '../../assets/images/photography.jpg';\nimport typographie from '../../assets/images/typographie.jpg';\nimport coding from '../../assets/images/coding.jpg';\nconst serves = [{\n  name: 'Photography',\n  image: photography\n}, {\n  name: 'Typographie',\n  image: typographie\n}, {\n  name: 'Coding',\n  image: coding\n}];\n\nconst Section = () => {\n  let servesBackground = useRef(null);\n  return React.createElement(\"div\", {\n    className: \"hero container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serves-background container\",\n    ref: el => {\n      servesBackground = el;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Title, {\n    headingStyle: \"bolder--800\",\n    headingSize: \"heading--h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serves flex-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, serves.map(el => React.createElement(\"span\", {\n    className: \"container\",\n    key: el.name,\n    onMouseEnter: () => handleServes(el.image, servesBackground),\n    onMouseOut: () => handleServesReturn(servesBackground),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"serves1 container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, el.name))))));\n};\n\nexport default Section;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Sections/Section.component.js"],"names":["React","useRef","gsap","handleServesReturn","handleServes","Title","photography","typographie","coding","serves","name","image","Section","servesBackground","el","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,aAAjD;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,MAAMC,MAAM,GAAG,CACZ;AACGC,EAAAA,IAAI,EAAE,aADT;AAEGC,EAAAA,KAAK,EAAEL;AAFV,CADY,EAKZ;AACGI,EAAAA,IAAI,EAAE,aADT;AAEGC,EAAAA,KAAK,EAAEJ;AAFV,CALY,EASZ;AACGG,EAAAA,IAAI,EAAE,QADT;AAEGC,EAAAA,KAAK,EAAEH;AAFV,CATY,CAAf;;AAeA,MAAMI,OAAO,GAAG,MAAM;AACnB,MAAIC,gBAAgB,GAAGZ,MAAM,CAAC,IAAD,CAA7B;AAEA,SACG;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AACG,IAAA,SAAS,EAAC,6BADb;AAEG,IAAA,GAAG,EAAGa,EAAD,IAAQ;AACVD,MAAAA,gBAAgB,GAAGC,EAAnB;AACF,KAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAOG,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAC,aAApB;AAAkC,IAAA,WAAW,EAAC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,MAAM,CAACM,GAAP,CAAYD,EAAD,IACT;AACG,IAAA,SAAS,EAAC,WADb;AAEG,IAAA,GAAG,EAAEA,EAAE,CAACJ,IAFX;AAGG,IAAA,YAAY,EAAE,MACXN,YAAY,CAACU,EAAE,CAACH,KAAJ,EAAWE,gBAAX,CAJlB;AAMG,IAAA,UAAU,EAAE,MAAMV,kBAAkB,CAACU,gBAAD,CANvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCC,EAAE,CAACJ,IAAtC,CARH,CADF,CADJ,CADH,CAPH,CADH;AA0BF,CA7BD;;AA+BA,eAAeE,OAAf","sourcesContent":["import React, { useRef } from 'react';\nimport gsap from 'gsap';\n\nimport { handleServesReturn, handleServes } from './Animation';\n\nimport Title from '../Title/Title';\nimport photography from '../../assets/images/photography.jpg';\nimport typographie from '../../assets/images/typographie.jpg';\nimport coding from '../../assets/images/coding.jpg';\n\nconst serves = [\n   {\n      name: 'Photography',\n      image: photography,\n   },\n   {\n      name: 'Typographie',\n      image: typographie,\n   },\n   {\n      name: 'Coding',\n      image: coding,\n   },\n];\n\nconst Section = () => {\n   let servesBackground = useRef(null);\n\n   return (\n      <div className='hero container'>\n         <div\n            className='serves-background container'\n            ref={(el) => {\n               servesBackground = el;\n            }}\n         ></div>\n         <Title headingStyle='bolder--800' headingSize='heading--h1'>\n            <div className='serves flex-wrap'>\n               {serves.map((el) => (\n                  <span\n                     className='container'\n                     key={el.name}\n                     onMouseEnter={() =>\n                        handleServes(el.image, servesBackground)\n                     }\n                     onMouseOut={() => handleServesReturn(servesBackground)}\n                  >\n                     <h1 className='serves1 container'>{el.name}</h1>\n                  </span>\n               ))}\n            </div>\n         </Title>\n      </div>\n   );\n};\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}