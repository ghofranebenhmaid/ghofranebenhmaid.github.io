{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Hero/Hero.component.js\";\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Card/Card.component';\n\nconst Tiles = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tiles = _useState4[0],\n        setTiles = _useState4[1];\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      const response = await fetch('https://bitbucket.org/ghofranebenhmaid/ghofrane.dev/raw/91832b79902169b4dd878b33425a4394df91a26f/src/assets/data/data.json');\n\n      const _ref = await response.json(),\n            jsonResponse = _ref.tiles;\n\n      console.log(jsonResponse);\n      setTiles(jsonResponse);\n      setIsLoading(false);\n    })();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"hero\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, isLoading && 'Loading...', !isLoading && tiles.length === 0 && 'Sorry, nothing found.', tiles.length > 0 && tiles.map((data, index) => React.createElement(Card, {\n    key: index,\n    image: data.image,\n    title: data.title,\n    description: data.description,\n    goto: data.href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nexport default Tiles;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Hero/Hero.component.js"],"names":["React","useEffect","useState","Card","Tiles","isLoading","setIsLoading","tiles","setTiles","response","fetch","json","jsonResponse","console","log","length","map","data","index","image","title","description","href"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;;AAGA,MAAMC,KAAK,GAAG,MACd;AAAA,oBACuCF,QAAQ,CAAC,KAAD,CAD/C;AAAA;AAAA,QACYG,SADZ;AAAA,QACuBC,YADvB;;AAAA,qBAE8BJ,QAAQ,CAAC,EAAD,CAFtC;AAAA;AAAA,QAEWK,KAFX;AAAA,QAEkBC,QAFlB;;AAKIP,EAAAA,SAAS,CAAC,MACV;AAAC,KAAC,YACF;AACIK,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACI,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,4HAAD,CAA5B;;AAFR,mBAGkC,MAAMD,QAAQ,CAACE,IAAT,EAHxC;AAAA,YAGkBC,YAHlB,QAGWL,KAHX;;AAKQM,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACJJ,MAAAA,QAAQ,CAACI,YAAD,CAAR;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEC,KAVJ;AAYA,GAbQ,EAaN,EAbM,CAAT;AAcA,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SAAS,IAAI,YADlB,EAEM,CAACA,SAAD,IAAcE,KAAK,CAACQ,MAAN,KAAiB,CAAhC,IAAsC,uBAF3C,EAGMR,KAAK,CAACQ,MAAN,GAAe,CAAhB,IACGR,KAAK,CAACS,GAAN,CAAW,CAACC,IAAD,EAAOC,KAAP,KACN,oBAAC,IAAD;AACG,IAAA,GAAG,EAAGA,KADT;AAEG,IAAA,KAAK,EAAGD,IAAI,CAACE,KAFhB;AAGG,IAAA,KAAK,EAAGF,IAAI,CAACG,KAHhB;AAIG,IAAA,WAAW,EAAGH,IAAI,CAACI,WAJtB;AAKG,IAAA,IAAI,EAAEJ,IAAI,CAACK,IALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CAJR,CADJ;AAmBH,CAvCD;;AAyCA,eAAelB,KAAf","sourcesContent":["import React, {useEffect,useState} from 'react';\n\nimport Card from '../Card/Card.component';\n\n\nconst Tiles = () =>\n{\n     const [isLoading, setIsLoading] = useState(false);\n    const [tiles, setTiles] = useState([]);\n\n    \n    useEffect(() =>\n    {(async () =>\n    {\n        setIsLoading(true)\n            const response = await fetch('https://bitbucket.org/ghofranebenhmaid/ghofrane.dev/raw/91832b79902169b4dd878b33425a4394df91a26f/src/assets/data/data.json');\n        const {tiles: jsonResponse} = await response.json();\n        \n            console.log(jsonResponse);\n        setTiles(jsonResponse)\n        setIsLoading(false)\n        \n        })();\n        \n    }, [])\n    return (\n        <div className='hero'> \n            {isLoading && 'Loading...' }\n            {(!isLoading && tiles.length === 0) && 'Sorry, nothing found.'}\n            {(tiles.length > 0) &&\n                tiles.map(((data, index) => (\n                     <Card\n                        key={ index }\n                        image={ data.image }\n                        title={ data.title }\n                        description={ data.description }\n                        goto={data.href}\n                    />\n                )\n                \n                \n                    )) }\n        </div>\n    )\n}\n\nexport default Tiles\n"]},"metadata":{},"sourceType":"module"}