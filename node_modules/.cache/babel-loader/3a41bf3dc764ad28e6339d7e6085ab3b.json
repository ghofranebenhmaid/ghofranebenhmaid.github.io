{"ast":null,"code":"var _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Sections/Section.component.js\";\nimport React, { useRef } from 'react';\nimport Title from '../Title/Title';\nimport gsap from 'gsap';\nimport photography from '../../assets/images/photography.jpg';\nimport typographie from '../../assets/images/typographie.jpg';\nimport coding from '../../assets/images/coding.jpg';\nconst serves = [{\n  name: 'Photography',\n  image: photography\n}, {\n  name: 'Typographie',\n  image: typographie\n}, {\n  name: 'Coding',\n  image: coding\n}];\n\nconst Section = () => {\n  let servesBackground = useRef(null);\n\n  const handleServes = serves => {\n    gsap.to(servesBackground, {\n      duration: 0,\n      background: \" url(\".concat(serves, \") center center\")\n    });\n    gsap.to(servesBackground, {\n      duration: 0.4,\n      opacity: 1,\n      ease: 'power3.inOut'\n    });\n    gsap.from(servesBackground, {\n      duration: 0.4,\n      skeyY: 2,\n      transformrigin: 'right top'\n    });\n  };\n\n  const handleServesReturn = () => {\n    gsap.to(servesBackground, {\n      duration: 0.4,\n      opacity: 0\n    });\n  };\n\n  return React.createElement(\"div\", {\n    ref: el => {\n      servesBackground = el;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, serves.map(el => React.createElement(Title, {\n    headingStyle: \"bolder--800\",\n    headingSize: \"heading--h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"servesBackground hero container\",\n    key: el.name,\n    onMouseEnter: () => handleServes(el.image),\n    onMouseOut: handleServesReturn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, el.name))));\n};\n\nexport default Section;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Sections/Section.component.js"],"names":["React","useRef","Title","gsap","photography","typographie","coding","serves","name","image","Section","servesBackground","handleServes","to","duration","background","opacity","ease","from","skeyY","transformrigin","handleServesReturn","el","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA6B,OAA7B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,MAAMC,MAAM,GAAG,CAAC;AACZC,EAAAA,IAAI,EAAE,aADM;AACSC,EAAAA,KAAK,EAAEL;AADhB,CAAD,EAEZ;AACCI,EAAAA,IAAI,EAAE,aADP;AACsBC,EAAAA,KAAK,EAAEJ;AAD7B,CAFY,EAIb;AACEG,EAAAA,IAAI,EAAE,QADR;AACkBC,EAAAA,KAAK,EAAEH;AADzB,CAJa,CAAf;;AAQA,MAAMI,OAAO,GAAG,MAChB;AACI,MAAIC,gBAAgB,GAAGV,MAAM,CAAC,IAAD,CAA7B;;AAEA,QAAMW,YAAY,GAAGL,MAAM,IAC3B;AACIJ,IAAAA,IAAI,CAACU,EAAL,CAAQF,gBAAR,EAA0B;AACtBG,MAAAA,QAAQ,EAAE,CADY;AAEtBC,MAAAA,UAAU,iBAAWR,MAAX;AAFY,KAA1B;AAICJ,IAAAA,IAAI,CAACU,EAAL,CAAQF,gBAAR,EAA0B;AACrBG,MAAAA,QAAQ,EAAE,GADW;AAErBE,MAAAA,OAAO,EAAE,CAFY;AAGvBC,MAAAA,IAAI,EAAE;AAHiB,KAA1B;AAKCd,IAAAA,IAAI,CAACe,IAAL,CAAUP,gBAAV,EAA4B;AACxBG,MAAAA,QAAQ,EAAE,GADc;AAExBK,MAAAA,KAAK,EAAE,CAFiB;AAG1BC,MAAAA,cAAc,EAAE;AAHU,KAA5B;AAML,GAjBD;;AAmBA,QAAMC,kBAAkB,GAAG,MAC3B;AACIlB,IAAAA,IAAI,CAACU,EAAL,CAAQF,gBAAR,EAA0B;AACpBG,MAAAA,QAAQ,EAAE,GADU;AAEpBE,MAAAA,OAAO,EAAE;AAFW,KAA1B;AAKH,GAPD;;AAQD,SACI;AAAO,IAAA,GAAG,EAAGM,EAAE,IAAI;AAACX,MAAAA,gBAAgB,GAAGW,EAAnB;AAAsB,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,MAAM,CAACgB,GAAP,CAAWD,EAAE,IACb,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAC,aAApB;AAAkC,IAAA,WAAW,EAAC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAM,IAAA,SAAS,EAAC,iCAAhB;AAAkD,IAAA,GAAG,EAAEA,EAAE,CAACd,IAA1D;AAAgE,IAAA,YAAY,EAAE,MAAKI,YAAY,CAACU,EAAE,CAACb,KAAJ,CAA/F;AAA2G,IAAA,UAAU,EAAEY,kBAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEFC,EAAE,CAACd,IAFD,CADH,CADA,CADL,CADJ;AAcF,CA7CD;;AA+CA,eAAeE,OAAf","sourcesContent":["import React , {useRef} from 'react';\nimport Title from '../Title/Title';\nimport gsap from 'gsap';\n\nimport photography from '../../assets/images/photography.jpg'\nimport typographie from '../../assets/images/typographie.jpg'\nimport coding from '../../assets/images/coding.jpg'\n\nconst serves = [{\n    name: 'Photography', image: photography\n}, {\n    name: 'Typographie', image: typographie\n},{\n    name: 'Coding', image: coding\n},]\n\nconst Section = () =>\n{\n    let servesBackground = useRef(null)\n    \n    const handleServes = serves =>\n    {\n        gsap.to(servesBackground, {\n            duration: 0,\n            background: ` url(${ serves }) center center`\n        });\n         gsap.to(servesBackground, {\n              duration: 0.4,\n              opacity: 1,\n            ease: 'power3.inOut'\n        })\n          gsap.from(servesBackground, {\n              duration: 0.4,\n              skeyY: 2,\n            transformrigin: 'right top'\n          })\n         \n    }\n\n    const handleServesReturn = () =>\n    {\n        gsap.to(servesBackground, {\n              duration: 0.4,\n              opacity: 0,\n           \n        })\n    }\n   return (\n       <div   ref= {el => {servesBackground = el}}>\n           {serves.map(el =>\n           (<Title headingStyle='bolder--800' headingSize='heading--h1'>\n               <span className='servesBackground hero container' key={el.name} onMouseEnter={()=> handleServes(el.image)} onMouseOut={handleServesReturn}>\n\n            {el.name}\n               </span>\n         </Title>)\n               \n           )}\n         \n      </div>\n   );\n};\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}