{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Tiles/Tiles.component.js\";\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Card/Card.component';\n\nconst Tiles = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tiles = _useState4[0],\n        setTiles = _useState4[1];\n\n  useEffect(() => {\n    (async () => {\n      const url = 'https://api.github.com/users/ghofranebenhmaid/repos';\n      setIsLoading(true);\n      const response = await fetch(url);\n\n      const _ref = await response.json(),\n            jsonResponse = _ref.tiles;\n\n      setTiles(jsonResponse);\n      setIsLoading(false);\n    })();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"tiles container  flex--wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, isLoading && 'Loading...', !isLoading && tiles.length === 0 && 'Sorry, nothing found.', tiles.length > 0 && tiles.map((data, index) => React.createElement(Card, {\n    key: index,\n    image: data.image,\n    title: data.title,\n    discription: data.discription,\n    goto: data.href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n};\n\nexport default Tiles;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Tiles/Tiles.component.js"],"names":["React","useEffect","useState","Card","Tiles","isLoading","setIsLoading","tiles","setTiles","url","response","fetch","json","jsonResponse","length","map","data","index","image","title","discription","href"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACiBF,QAAQ,CAAC,IAAD,CADzB;AAAA;AAAA,QACVG,SADU;AAAA,QACCC,YADD;;AAAA,qBAESJ,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,QAEVK,KAFU;AAAA,QAEHC,QAFG;;AAIjBP,EAAAA,SAAS,CAAC,MAAM;AACb,KAAC,YACD;AACA,YAAMQ,GAAG,GAAG,qDAAZ;AAEGH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;AAJH,mBAKmC,MAAMC,QAAQ,CAACE,IAAT,EALzC;AAAA,YAKkBC,YALlB,QAKWN,KALX;;AAOGC,MAAAA,QAAQ,CAACK,YAAD,CAAR;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACF,KAVD;AAWF,GAZQ,EAYN,EAZM,CAAT;AAaA,SACG;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,SAAS,IAAI,YADjB,EAEI,CAACA,SAAD,IAAcE,KAAK,CAACO,MAAN,KAAiB,CAA/B,IAAoC,uBAFxC,EAGIP,KAAK,CAACO,MAAN,GAAe,CAAf,IACEP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KACP,oBAAC,IAAD;AACG,IAAA,GAAG,EAAEA,KADR;AAEG,IAAA,KAAK,EAAED,IAAI,CAACE,KAFf;AAGG,IAAA,KAAK,EAAEF,IAAI,CAACG,KAHf;AAIG,IAAA,WAAW,EAAEH,IAAI,CAACI,WAJrB;AAKG,IAAA,IAAI,EAAEJ,IAAI,CAACK,IALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAJN,CADH;AAgBF,CAjCD;;AAmCA,eAAejB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Card from '../Card/Card.component';\n\nconst Tiles = () => {\n   const [isLoading, setIsLoading] = useState(true);\n   const [tiles, setTiles] = useState([]);\n\n   useEffect(() => {\n      (async () =>\n      {\n      const url = 'https://api.github.com/users/ghofranebenhmaid/repos';\n         \n         setIsLoading(true);\n         const response = await fetch(url);\n         const { tiles: jsonResponse } = await response.json();\n   \n         setTiles(jsonResponse);\n         setIsLoading(false);\n      })();\n   }, []);\n   return (\n      <div className='tiles container  flex--wrap'>\n         {isLoading && 'Loading...'}\n         {!isLoading && tiles.length === 0 && 'Sorry, nothing found.'}\n         {tiles.length > 0 &&\n            tiles.map((data, index) => (\n               <Card\n                  key={index}\n                  image={data.image}\n                  title={data.title}\n                  discription={data.discription}\n                  goto={data.href}\n               />\n            ))}\n      </div>\n   );\n};\n\nexport default Tiles;\n"]},"metadata":{},"sourceType":"module"}