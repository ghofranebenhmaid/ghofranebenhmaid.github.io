{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Slider/Slider.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Title from '../Title/Title';\n\nconst Slider = ({\n  slides\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        current = _useState2[0],\n        setCurrent = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        active = _useState4[0],\n        setActive = _useState4[1]; // const { length } = slides;\n\n\n  useEffect(() => {\n    setTimeout(() => setCurrent((current + 1) % slides.length), 3000);\n  }, []);\n\n  const handleSetClick = event => {\n    setCurrent(slides[event.target.getAttribute('data-slides')]);\n    setActive(event.target.getAttribute('data-slides'));\n  }; // const goToNext = () => {\n  //    setCurrent(current === length - 1 ? 0 : current + 1);\n  // };\n  // useEffect(() => {\n  //     setTimeout(goToNext, 3000);\n  //    return function () {\n  //       clearTimeout(goToNext);\n  //    };\n  // });\n\n\n  if (!Array.isArray(slides) || slides.length <= 0) return null;\n  return React.createElement(\"section\", {\n    className: \"slider flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, slides.map((s, i) => React.createElement(\"div\", {\n    // if active slide, include the \"active\" class\n    className: i === current ? 'slide active' : 'slide',\n    key: s.title // if not active, hide from screen readers for accessibility\n    ,\n    \"aria-hidden\": i !== current,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text--mb--s\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Title, {\n    headingStyle: \"bolder--800\",\n    headingSize: \"heading--h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, s.title)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Title, {\n    headingStyle: \"normal--400\",\n    headingSize: \"heading--small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, s.subtitle)), React.createElement(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, Object.keys(slides).map(index => React.createElement(\"span\", {\n    className: 'data-slides={ index }' === active ? 'activeSlide active1' : 'activeSlide',\n    onClick: event => handleSetClick(event),\n    \"data-slides\": index,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })))))));\n};\n\nexport default Slider;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Slider/Slider.jsx"],"names":["React","useState","useEffect","Title","Slider","slides","current","setCurrent","active","setActive","setTimeout","length","handleSetClick","event","target","getAttribute","Array","isArray","map","s","i","title","subtitle","Object","keys","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA,oBACEJ,QAAQ,CAAC,CAAD,CADV;AAAA;AAAA,QACrBK,OADqB;AAAA,QACZC,UADY;;AAAA,qBAEDN,QAAQ,CAAC,CAAD,CAFP;AAAA;AAAA,QAErBO,MAFqB;AAAA,QAEdC,SAFc,kBAG5B;;;AAIFP,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,UAAU,CAAE,MAAKH,UAAU,CAAC,CAACD,OAAO,GAAG,CAAX,IAAgBD,MAAM,CAACM,MAAxB,CAAjB,EAAkD,IAAlD,CAAV;AAEH,GAJQ,EAIN,EAJM,CAAT;;AAME,QAAMC,cAAc,GAAGC,KAAK,IAC5B;AACGN,IAAAA,UAAU,CAACF,MAAM,CAACQ,KAAK,CAACC,MAAN,CAAaC,YAAb,CAA0B,aAA1B,CAAD,CAAP,CAAV;AACAN,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,YAAb,CAA0B,aAA1B,CAAD,CAAT;AACF,GAJD,CAb4B,CAmB5B;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcZ,MAAd,CAAD,IAA0BA,MAAM,CAACM,MAAP,IAAiB,CAA/C,EAAkD,OAAO,IAAP;AAElD,SACG;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIN,MAAM,CAACa,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,KACT;AACG;AACA,IAAA,SAAS,EAAEA,CAAC,KAAKd,OAAN,GAAgB,cAAhB,GAAiC,OAF/C;AAGG,IAAA,GAAG,EAAEa,CAAC,CAACE,KAHV,CAIG;AAJH;AAKG,mBAAaD,CAAC,KAAKd,OALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,KAAD;AACG,IAAA,YAAY,EAAC,aADhB;AAEG,IAAA,WAAW,EAAC,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIa,CAAC,CAACE,KAJN,CADH,CADH,EASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,KAAD;AACG,IAAA,YAAY,EAAC,aADhB;AAEG,IAAA,WAAW,EAAC,gBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIF,CAAC,CAACG,QAJN,CAFA,CATH,EAkBG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEC,MAAM,CAACC,IAAP,CAAYnB,MAAZ,EAAoBa,GAApB,CAAwBO,KAAK,IAC5B;AACA,IAAA,SAAS,EAAE,4BAA4BjB,MAA5B,GAAqC,qBAArC,GAA6D,aADxE;AAEA,IAAA,OAAO,EAAGK,KAAK,IAAID,cAAc,CAACC,KAAD,CAFjC;AAGA,mBAAcY,KAHd;AAIA,IAAA,GAAG,EAAEA,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFF,CAlBH,CAPH,CADF,CADJ,CADH;AAgDF,CAjFD;;AAmFA,eAAerB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Title from '../Title/Title';\n\n\nconst Slider = ({ slides }) => {\n   const [current, setCurrent] = useState(0);\n   const [active,setActive] = useState(0);\n   // const { length } = slides;\n\n \n\n useEffect(() => {\n\n     setTimeout( ()=> setCurrent((current + 1) % slides.length), 3000);\n    \n }, []);\n   \n   const handleSetClick = event => \n   {\n      setCurrent(slides[event.target.getAttribute('data-slides')])\n      setActive(event.target.getAttribute('data-slides'))\n   }\n   \n   // const goToNext = () => {\n   //    setCurrent(current === length - 1 ? 0 : current + 1);\n   // };\n    \n\n   // useEffect(() => {\n   //     setTimeout(goToNext, 3000);\n   //    return function () {\n   //       clearTimeout(goToNext);\n   //    };\n   // });\n    \n   if (!Array.isArray(slides) || slides.length <= 0) return null;\n\n   return (\n      <section className='slider flex'>\n         {slides.map((s, i) => (\n            <div\n               // if active slide, include the \"active\" class\n               className={i === current ? 'slide active' : 'slide'}\n               key={s.title}\n               // if not active, hide from screen readers for accessibility\n               aria-hidden={i !== current}\n            >\n               <div>\n                  <div className='text--mb--s'>\n                     <Title\n                        headingStyle='bolder--800'\n                        headingSize='heading--h2'\n                     >\n                        {s.title}\n                     </Title>\n                  </div>\n                  <div>\n\n                  <Title\n                     headingStyle='normal--400'\n                     headingSize='heading--small'\n                     >\n                     {s.subtitle}\n                  </Title>\n                  </div>\n                  <div className='flex' >\n\n                  { Object.keys(slides).map(index => (\n                     <span \n                     className={'data-slides={ index }' === active ? 'activeSlide active1' : 'activeSlide'}\n                     onClick={ event => handleSetClick(event) }\n                     data-slides={ index }\n                     key={index}\n                     />\n                    \n                     ))}\n\n                     </div>\n                  \n                 </div>\n          \n            </div>\n         ))}\n      </section>\n   );\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}