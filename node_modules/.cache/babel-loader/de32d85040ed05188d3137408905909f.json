{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/ContactForm/ContactForm.component.js\";\nimport React from \"react\";\n\nconst ContactForm = () => {\n  const _useState = useState(\"Submit\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        status = _useState2[0],\n        setStatus = _useState2[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const _e$target$elements = e.target.elements,\n          name = _e$target$elements.name,\n          email = _e$target$elements.email,\n          message = _e$target$elements.message;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value\n    };\n    let response = await fetch(\"http://localhost:3000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(details)\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"contact-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"contact_number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Subject\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Message\"), React.createElement(\"textarea\", {\n    name: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Send\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n  return React.createElement(\"form\", {\n    className: \"contact\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"input__label\",\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(\"input\", {\n    className: \"input__name\",\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"input__label\",\n    htmlFor: \"subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(\"input\", {\n    className: \"input__subject\",\n    type: \"text\",\n    id: \"subject\",\n    name: \"subject\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"input__label\",\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(\"input\", {\n    className: \"input__email\",\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"input__label\",\n    htmlFor: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Message:\"), React.createElement(\"textarea\", {\n    className: \"input__message\",\n    id: \"message\",\n    name: \"message\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, status));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/ContactForm/ContactForm.component.js"],"names":["React","ContactForm","useState","status","setStatus","handleSubmit","e","preventDefault","target","elements","name","email","message","details","value","response","fetch","method","headers","body","JSON","stringify","result","json","alert"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst ContactForm = () => {\n  const [status, setStatus] = useState(\"Submit\");\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n    const { name, email, message } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value,\n    };\n    let response = await fetch(\"http://localhost:3000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(details),\n    });\n    setStatus(\"Submit\");\n    let result = await response.json();\n    alert(result.status);\n  };\n\n  \n  return (\n    <form className=\"contact-form\" onSubmit={handleSubmit}>\n      <input type=\"hidden\" name=\"contact_number\" />\n      <label>Subject</label>\n      <input type=\"text\" name=\"subject\" />\n      <label>Name</label>\n      <input type=\"text\" name=\"name\" />\n      <label>Email</label>\n      <input type=\"email\" name=\"email\" />\n      <label>Message</label>\n      <textarea name=\"message\" />\n      <input type=\"submit\" value=\"Send\" />\n    </form>\n  );\n  return (\n    <form className='contact' onSubmit={handleSubmit}>\n      <div className='input'>\n        <label className='input__label' htmlFor=\"name\">Name:</label>\n        <input className='input__name' type=\"text\" id=\"name\" name='name' required />\n      </div>\n      <div className='input'>\n        <label className='input__label' htmlFor=\"subject\">Name:</label>\n        <input className='input__subject' type=\"text\" id=\"subject\" name='subject' required />\n      </div>\n      <div className='input'>\n        <label className='input__label' htmlFor=\"email\">Email:</label>\n        <input className='input__email' type=\"email\" id=\"email\" name='email' required />\n      </div>\n      <div className='input'>\n        <label className='input__label' htmlFor=\"message\">Message:</label>\n        <textarea className='input__message'  id=\"message\" name='message' required />\n      </div>\n      <button type=\"submit\">{status}</button>\n    </form>\n  );\n};\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}