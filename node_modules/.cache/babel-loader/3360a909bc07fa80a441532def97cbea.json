{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/CustomCursor/CustomCursor.jsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst CustomCursor = () => {\n  const cursorRef = useRef();\n  useEffect(() => {\n    document.addEventListener('mousemove', e => {\n      const clientX = e.clientX,\n            clientY = e.clientY;\n      const mouseX = clientX - cursorRef.current.clientWidth / 2;\n      const mouseY = clientY - cursorRef.current.clientHeight / 2; // cursorRef.current.style.transform = `translate3d(${ mouseX }px, ${ mouseY }px, 0)`;\n\n      cursorRef.current.setAttribute('style', \"top:\".concat(mouseY, \"px; left:\").concat(mouseX, \"px;\"));\n    });\n  }, []);\n\n  const _useState = useState([0, 0, false]),\n        _useState2 = _slicedToArray(_useState, 2),\n        mouse = _useState2[0],\n        setMouse = _useState2[1];\n\n  const _mouse = _slicedToArray(mouse, 3),\n        mx = _mouse[0],\n        my = _mouse[1],\n        isActive = _mouse[2];\n\n  return React.createElement(motion.div, {\n    className: \"cursor\",\n    ref: cursorRef,\n    whileHover: {\n      backgroundColor: \"#424242\"\n    },\n    whileTap: {\n      backgroundColor: \"#212121\"\n    },\n    onMouseMove: e => {\n      const _e$currentTarget = e.currentTarget,\n            offsetTop = _e$currentTarget.offsetTop,\n            offsetLeft = _e$currentTarget.offsetLeft;\n      setMouse([e.pageX - offsetLeft, e.pageY - offsetTop, true]);\n    },\n    onMouseEnter: () => setMouse([mx, my, true]),\n    onMouseLeave: () => setMouse([mx, my, false]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(AnimatePresence, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, isActive && React.createElement(motion.div, {\n    key: \"dot\",\n    className: \"dot\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      x: mx,\n      y: my,\n      opacity: 1\n    },\n    exit: {\n      opacity: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: \"10\",\n    height: \"10\",\n    viewBox: \"0 0 10 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    fill: \"red\",\n    cx: \"4\",\n    cy: \"4\",\n    r: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))));\n};\n\nexport default CustomCursor;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/CustomCursor/CustomCursor.jsx"],"names":["React","useState","useRef","useEffect","motion","AnimatePresence","CustomCursor","cursorRef","document","addEventListener","e","clientX","clientY","mouseX","current","clientWidth","mouseY","clientHeight","setAttribute","mouse","setMouse","mx","my","isActive","backgroundColor","currentTarget","offsetTop","offsetLeft","pageX","pageY","opacity","x","y"],"mappings":"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","sourcesContent":["import React, { useState,useRef, useEffect } from 'react';\nimport { motion,AnimatePresence  } from 'framer-motion';\nconst CustomCursor = () => {\n   const cursorRef = useRef();\n\n   useEffect(() => {\n      document.addEventListener('mousemove', (e) => {\n         const { clientX, clientY } = e;\n         const mouseX = clientX - cursorRef.current.clientWidth / 2;\n         const mouseY = clientY - cursorRef.current.clientHeight / 2;\n\n         // cursorRef.current.style.transform = `translate3d(${ mouseX }px, ${ mouseY }px, 0)`;\n         cursorRef.current.setAttribute(\n            'style',\n            `top:${mouseY}px; left:${mouseX}px;`\n         );\n      });\n   }, []);\n    \n    const [mouse, setMouse] = useState([0,0,false]);\n  const [mx, my, isActive] = mouse;\n\n   return (\n      <motion.div\n         className='cursor'\n         ref={cursorRef}\n        \n            whileHover={{\n        backgroundColor: \"#424242\"\n      }}\n      whileTap={{\n        backgroundColor: \"#212121\"\n      }}\n      onMouseMove={e => {\n        const { offsetTop, offsetLeft } = e.currentTarget;\n        setMouse([e.pageX - offsetLeft, e.pageY - offsetTop, true]);\n      }}\n      onMouseEnter={() => setMouse([mx, my, true])}\n      onMouseLeave={() => setMouse([mx, my, false])}\n       >\n\n              <AnimatePresence>\n        {isActive && (\n          <motion.div\n            key=\"dot\"\n            className=\"dot\"\n            initial={{\n              opacity: 0,\n            }}\n            animate={{\n              x: mx,\n              y: my,\n              opacity: 1,\n            }}\n            exit={{\n              opacity: 1,\n            }}\n            >\n            <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\">\n              <circle fill=\"red\" cx=\"4\" cy=\"4\" r=\"4\" />\n            </svg>\n          </motion.div>\n        )}\n      </AnimatePresence>  \n\n      </motion.div>\n   );\n};\n\nexport default CustomCursor;\n"]},"metadata":{},"sourceType":"module"}