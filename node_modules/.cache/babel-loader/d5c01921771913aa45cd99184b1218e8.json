{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/NavHamburger/Navbar.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Hamburger from './Hamburger';\nimport './Header.style.scss';\nimport { HiMenuAlt3, HiOutlineX } from \"react-icons/hi\";\n\nconst Navbar = ({\n  history\n}) => {\n  useEffect(() => {\n    // If the menu is open and we click the menu button to close it.\n    if (state.clicked === false) {\n      // If menu is closed and we want to open it.\n      staggerRevealClose(reveal2, reveal1); // Set menu to display none\n\n      gsap.to(menuLayer, {\n        duration: 1,\n        css: {\n          display: 'none'\n        }\n      });\n    } else if (state.clicked === true || state.clicked === true && state.initial === null) {\n      // Set menu to display block\n      gsap.to(menuLayer, {\n        duration: 0,\n        css: {\n          display: 'block'\n        }\n      }); //Allow menu to have height of 100%\n\n      gsap.to([reveal1, reveal2], {\n        duration: 0,\n        opacity: 1,\n        height: '100%' // width: '100%',\n\n      });\n      staggerReveal(reveal1, reveal2); // fadeInUp(info);\n\n      staggerText(line1, line2, line3, line4, line5);\n    }\n  }, [state]); // State of our Menu\n\n  const _useState = useState({\n    initial: false,\n    clicked: null,\n    menuName: React.createElement(HiMenuAlt3, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1]; // State of our button\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        disabled = _useState4[0],\n        setDisabled = _useState4[1]; //Use Effect\n\n\n  useEffect(() => {\n    //Listening for page changes.\n    history.listen(() => {\n      setState({\n        clicked: false,\n        menuName: React.createElement(HiMenuAlt3, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })\n      });\n    });\n  }, [history]); // Toggle menu\n\n  const handleMenu = () => {\n    disableMenu();\n\n    if (state.initial === false) {\n      setState({\n        initial: null,\n        clicked: true,\n        menuName: React.createElement(HiOutlineX, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })\n      });\n    } else if (state.clicked === true) {\n      setState({\n        clicked: !state.clicked,\n        menuName: React.createElement(HiMenuAlt3, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })\n      });\n    } else if (state.clicked === false) {\n      setState({\n        clicked: !state.clicked,\n        menuName: React.createElement(HiOutlineX, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })\n      });\n    }\n  }; //Determine if out menu button should be disabled\n\n\n  const disableMenu = () => {\n    setDisabled(!disabled);\n    setTimeout(() => {\n      setDisabled(false);\n    }, 1200);\n  };\n\n  return React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inner-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"GHOFRANE.\")), React.createElement(\"div\", {\n    className: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"menu--btn\",\n    disabled: disabled,\n    onClick: handleMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, state.menuName))))), React.createElement(Hamburger, {\n    state: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(Navbar);","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/NavHamburger/Navbar.component.js"],"names":["React","useState","useEffect","withRouter","Link","Hamburger","HiMenuAlt3","HiOutlineX","Navbar","history","state","clicked","staggerRevealClose","reveal2","reveal1","gsap","to","menuLayer","duration","css","display","initial","opacity","height","staggerReveal","staggerText","line1","line2","line3","line4","line5","menuName","setState","disabled","setDisabled","listen","handleMenu","disableMenu","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Hamburger from './Hamburger';\nimport './Header.style.scss';\nimport { HiMenuAlt3 ,HiOutlineX } from \"react-icons/hi\";\n\nconst Navbar = ({ history }) =>\n{\n   \n   useEffect(() => {\n      // If the menu is open and we click the menu button to close it.\n      if (state.clicked === false) {\n         // If menu is closed and we want to open it.\n\n         staggerRevealClose(reveal2, reveal1);\n         // Set menu to display none\n         gsap.to(menuLayer, { duration: 1, css: { display: 'none' } });\n      } else if (\n         state.clicked === true ||\n         (state.clicked === true && state.initial === null)\n      ) {\n         // Set menu to display block\n         gsap.to(menuLayer, { duration: 0, css: { display: 'block' } });\n         //Allow menu to have height of 100%\n         gsap.to([reveal1, reveal2], {\n            duration: 0,\n            opacity: 1,\n            height: '100%',\n            // width: '100%',\n         });\n         staggerReveal(reveal1, reveal2);\n         // fadeInUp(info);\n         staggerText(line1, line2, line3, line4, line5);\n      }\n   }, [state]);\n\n\n\n\n\n   // State of our Menu\n   const [state, setState] = useState({\n      initial: false,\n      clicked: null,\n      menuName: <HiMenuAlt3 /> ,\n   });\n   // State of our button\n   const [disabled, setDisabled] = useState(false);\n\n   //Use Effect\n   useEffect(() => {\n      //Listening for page changes.\n      history.listen(() => {\n         setState({ clicked: false, menuName: <HiMenuAlt3 />  });\n      });\n   }, [history]);\n\n   // Toggle menu\n   const handleMenu = () => {\n      disableMenu();\n      if (state.initial === false) {\n         setState({\n            initial: null,\n            clicked: true,\n            menuName: <HiOutlineX/>,\n         });\n      } else if (state.clicked === true) {\n         setState({\n            clicked: !state.clicked,\n            menuName: <HiMenuAlt3/> ,\n         });\n      } else if (state.clicked === false) {\n         setState({\n            clicked: !state.clicked,\n            menuName: <HiOutlineX/>,\n         });\n      }\n   };\n\n   //Determine if out menu button should be disabled\n   const disableMenu = () => {\n      setDisabled(!disabled);\n      setTimeout(() => {\n         setDisabled(false);\n      }, 1200);\n   };\n\n   return (\n      <header>\n         <div className='container'>\n            <div className='wrapper'>\n               <div className='inner-header'>\n                  <div className='logo'>\n                     <Link to='/'>GHOFRANE.</Link>\n                  </div>\n\n                  <div className='menu'>\n\n                     <button\n                        className='menu--btn'\n                        disabled={disabled}\n                        onClick={handleMenu}\n                     >\n                        {state.menuName}\n                     </button>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Hamburger state={state} />\n      </header>\n   );\n};\n\nexport default withRouter(Navbar);\n"]},"metadata":{},"sourceType":"module"}