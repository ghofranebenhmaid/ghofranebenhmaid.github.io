{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Hero/Hero.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Card from '../Card/Card.component';\nimport dataCard from '../../assets/data/data.json';\n\nconst _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\nconst _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\nconst _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\nuseEffect(async () => {\n  setLoading(true);\n  const response = await fetch(dataCard);\n  const data = response.json();\n\n  const _data$result$then$cat = data.result.then(data => {\n    setLoading(false);\n    setData(data);\n    console.log(data);\n  }).catch(e => {\n    setLoading(false);\n    setError('fetch failed');\n  }),\n        _data$result$then$cat2 = _slicedToArray(_data$result$then$cat, 1),\n        item = _data$result$then$cat2[0];\n}, []);\n\nconst Hero = () => {\n  return React.createElement(\"div\", {\n    className: \"hero\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, loading && 'Loading...', !loading && data.length === 0 && 'Sorry, nothing found.'));\n};\n\nexport default Hero;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Hero/Hero.component.js"],"names":["React","useState","useEffect","ReactDOM","Card","dataCard","loading","setLoading","error","setError","data","setData","response","fetch","json","result","then","console","log","catch","e","item","Hero","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,QAAP,MAAqB,6BAArB;;kBAE8BJ,QAAQ,CAAC,IAAD,C;;MAA/BK,O;MAASC,U;;mBACYN,QAAQ,CAAC,EAAD,C;;MAA3BO,K;MAAOC,Q;;mBACUR,QAAQ,CAAC,EAAD,C;;MAAzBS,I;MAAMC,O;;AAEfT,SAAS,CAAE,YAAY;AACnBK,EAAAA,UAAU,CAAC,IAAD,CAAV;AACC,QAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACR,QAAD,CAA5B;AACD,QAAMK,IAAI,GAAGE,QAAQ,CAACE,IAAT,EAAb;;AAHmB,gCAIJJ,IAAI,CAACK,MAAL,CACZC,IADY,CACNN,IAAD,IAAU;AACdH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACEI,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACH,GALY,EAMZS,KANY,CAMLC,CAAD,IAAO;AACZb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,cAAD,CAAR;AACD,GATY,CAJI;AAAA;AAAA,QAIZY,IAJY;AActB,CAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAMC,IAAI,GAAG,MAAM;AACf,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,OAAO,IAAI,YADhB,EAEF,CAACA,OAAD,IAAYI,IAAI,CAACa,MAAL,KAAgB,CAA7B,IAAmC,uBAFhC,CADJ,CADJ;AAQH,CATD;;AAWA,eAAeD,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Card from '../Card/Card.component';\n\nimport dataCard from '../../assets/data/data.json'\n\nconst [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n\nuseEffect( async () => {\n    setLoading(true);\n     const response = await fetch(dataCard)\n    const data = response.json();\n    const [item] = data.result\n      .then((data) => {\n        setLoading(false);\n          setData(data);\n          console.log(data);\n      })\n      .catch((e) => {\n        setLoading(false);\n        setError('fetch failed');\n      });\n}, []);\n  \nconst Hero = () => {\n    return (\n        <div className='hero'>\n            <Card>\n                {loading && 'Loading...'}\n        {(!loading && data.length === 0) && 'Sorry, nothing found.'}\n            </Card>\n        </div>\n    )\n}\n\nexport default Hero\n"]},"metadata":{},"sourceType":"module"}