{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/NavHamburger/Navbar.component.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Hamburger from './Hamburger';\nimport './Header.style.scss';\nimport { HiMenuAlt3, HiOutlineX } from \"react-icons/hi\";\nimport { gsap } from 'gsap';\nimport { staggerText, staggerReveal, handleHover, handleHoverExit, staggerRevealClose } from './Animations';\n\nconst Navbar = ({\n  history,\n  state\n}) => {\n  let menuLayer = useRef(null);\n  let reveal1 = useRef(null);\n  let reveal2 = useRef(null);\n  useEffect(() => {\n    // If the menu is open and we click the menu button to close it.\n    if (state.clicked === false) {\n      // If menu is closed and we want to open it.\n      staggerRevealClose(reveal2, reveal1); // Set menu to display none\n\n      gsap.to(menuLayer, {\n        duration: 1,\n        css: {\n          display: 'none'\n        }\n      });\n    } else if (state.clicked === true || state.clicked === true && state.initial === null) {\n      // Set menu to display block\n      gsap.to(menuLayer, {\n        duration: 0,\n        css: {\n          display: 'block'\n        }\n      }); //Allow menu to have height of 100%\n\n      gsap.to([reveal1, reveal2], {\n        duration: 0,\n        opacity: 1,\n        height: '100%' // width: '100%',\n\n      });\n      staggerReveal(reveal1, reveal2); // fadeInUp(info);\n      // staggerText(line1, line2, line3, line4, line5);\n    }\n  }, [state]); // State of our Menu\n\n  const _useState = useState({\n    initial: false,\n    clicked: null,\n    menuName: React.createElement(HiMenuAlt3, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state2 = _useState2[0],\n        setState = _useState2[1]; // State of our button\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        disabled = _useState4[0],\n        setDisabled = _useState4[1]; //Use Effect\n\n\n  useEffect(() => {\n    //Listening for page changes.\n    history.listen(() => {\n      setState({\n        clicked: false,\n        menuName: React.createElement(HiMenuAlt3, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })\n      });\n    });\n  }, [history]); // Toggle menu\n\n  const handleMenu = () => {\n    disableMenu();\n\n    if (state.initial === false) {\n      setState({\n        initial: null,\n        clicked: true,\n        menuName: React.createElement(HiOutlineX, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        })\n      });\n    } else if (state.clicked === true) {\n      setState({\n        clicked: !state.clicked,\n        menuName: React.createElement(HiMenuAlt3, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        })\n      });\n    } else if (state.clicked === false) {\n      setState({\n        clicked: !state.clicked,\n        menuName: React.createElement(HiOutlineX, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        })\n      });\n    }\n  }; //Determine if out menu button should be disabled\n\n\n  const disableMenu = () => {\n    setDisabled(!disabled);\n    setTimeout(() => {\n      setDisabled(false);\n    }, 1200);\n  };\n\n  return React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inner-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: el => reveal1 = el,\n    className: \"menu-secondary-background-color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"logo\",\n    ref: el => reveal2 = el,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"GHOFRANE.\")), React.createElement(\"div\", {\n    className: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"menu--btn\",\n    disabled: disabled,\n    onClick: handleMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, state.menuName))))), React.createElement(Hamburger, {\n    state: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(Navbar);","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/NavHamburger/Navbar.component.js"],"names":["React","useState","useRef","useEffect","withRouter","Link","Hamburger","HiMenuAlt3","HiOutlineX","gsap","staggerText","staggerReveal","handleHover","handleHoverExit","staggerRevealClose","Navbar","history","state","menuLayer","reveal1","reveal2","clicked","to","duration","css","display","initial","opacity","height","menuName","state2","setState","disabled","setDisabled","listen","handleMenu","disableMenu","setTimeout","el"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,OAAlD;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,qBAAP;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,gBAAvC;AAEA,SAASC,IAAT,QAAqB,MAArB;AAEA,SACGC,WADH,EAEGC,aAFH,EAGGC,WAHH,EAIGC,eAJH,EAKGC,kBALH,QAMO,cANP;;AAQA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KACf;AACG,MAAIC,SAAS,GAAGhB,MAAM,CAAC,IAAD,CAAtB;AACA,MAAIiB,OAAO,GAAGjB,MAAM,CAAC,IAAD,CAApB;AACA,MAAIkB,OAAO,GAAGlB,MAAM,CAAC,IAAD,CAApB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb;AACA,QAAIc,KAAK,CAACI,OAAN,KAAkB,KAAtB,EAA6B;AAC1B;AAEAP,MAAAA,kBAAkB,CAACM,OAAD,EAAUD,OAAV,CAAlB,CAH0B,CAI1B;;AACAV,MAAAA,IAAI,CAACa,EAAL,CAAQJ,SAAR,EAAmB;AAAEK,QAAAA,QAAQ,EAAE,CAAZ;AAAeC,QAAAA,GAAG,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAApB,OAAnB;AACF,KAND,MAMO,IACJR,KAAK,CAACI,OAAN,KAAkB,IAAlB,IACCJ,KAAK,CAACI,OAAN,KAAkB,IAAlB,IAA0BJ,KAAK,CAACS,OAAN,KAAkB,IAFzC,EAGL;AACC;AACAjB,MAAAA,IAAI,CAACa,EAAL,CAAQJ,SAAR,EAAmB;AAAEK,QAAAA,QAAQ,EAAE,CAAZ;AAAeC,QAAAA,GAAG,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAApB,OAAnB,EAFD,CAGC;;AACAhB,MAAAA,IAAI,CAACa,EAAL,CAAQ,CAACH,OAAD,EAAUC,OAAV,CAAR,EAA4B;AACzBG,QAAAA,QAAQ,EAAE,CADe;AAEzBI,QAAAA,OAAO,EAAE,CAFgB;AAGzBC,QAAAA,MAAM,EAAE,MAHiB,CAIzB;;AAJyB,OAA5B;AAMAjB,MAAAA,aAAa,CAACQ,OAAD,EAAUC,OAAV,CAAb,CAVD,CAWC;AACA;AACF;AACH,GAzBQ,EAyBN,CAACH,KAAD,CAzBM,CAAT,CALH,CAoCG;;AApCH,oBAqC8BhB,QAAQ,CAAC;AACjCyB,IAAAA,OAAO,EAAE,KADwB;AAEjCL,IAAAA,OAAO,EAAE,IAFwB;AAGjCQ,IAAAA,QAAQ,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHuB,GAAD,CArCtC;AAAA;AAAA,QAqCUC,MArCV;AAAA,QAqCkBC,QArClB,kBA0CG;;;AA1CH,qBA2CmC9B,QAAQ,CAAC,KAAD,CA3C3C;AAAA;AAAA,QA2CU+B,QA3CV;AAAA,QA2CoBC,WA3CpB,kBA6CG;;;AACA9B,EAAAA,SAAS,CAAC,MAAM;AACb;AACAa,IAAAA,OAAO,CAACkB,MAAR,CAAe,MAAM;AAClBH,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,OAAO,EAAE,KAAX;AAAkBQ,QAAAA,QAAQ,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B,OAAD,CAAR;AACF,KAFD;AAGF,GALQ,EAKN,CAACb,OAAD,CALM,CAAT,CA9CH,CAqDG;;AACA,QAAMmB,UAAU,GAAG,MAAM;AACtBC,IAAAA,WAAW;;AACX,QAAInB,KAAK,CAACS,OAAN,KAAkB,KAAtB,EAA6B;AAC1BK,MAAAA,QAAQ,CAAC;AACNL,QAAAA,OAAO,EAAE,IADH;AAENL,QAAAA,OAAO,EAAE,IAFH;AAGNQ,QAAAA,QAAQ,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ,OAAD,CAAR;AAKF,KAND,MAMO,IAAIZ,KAAK,CAACI,OAAN,KAAkB,IAAtB,EAA4B;AAChCU,MAAAA,QAAQ,CAAC;AACNV,QAAAA,OAAO,EAAE,CAACJ,KAAK,CAACI,OADV;AAENQ,QAAAA,QAAQ,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,OAAD,CAAR;AAIF,KALM,MAKA,IAAIZ,KAAK,CAACI,OAAN,KAAkB,KAAtB,EAA6B;AACjCU,MAAAA,QAAQ,CAAC;AACNV,QAAAA,OAAO,EAAE,CAACJ,KAAK,CAACI,OADV;AAENQ,QAAAA,QAAQ,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,OAAD,CAAR;AAIF;AACH,GAnBD,CAtDH,CA2EG;;;AACA,QAAMO,WAAW,GAAG,MAAM;AACvBH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAK,IAAAA,UAAU,CAAC,MAAM;AACdJ,MAAAA,WAAW,CAAC,KAAD,CAAX;AACF,KAFS,EAEP,IAFO,CAAV;AAGF,GALD;;AAOA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AACN,IAAA,GAAG,EAAGK,EAAD,IAASnB,OAAO,GAAGmB,EADlB;AAEN,IAAA,SAAS,EAAC,iCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAKG;AAAK,IAAA,SAAS,EAAC,MAAf;AACA,IAAA,GAAG,EAAGA,EAAD,IAASlB,OAAO,GAAGkB,EADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHH,CALH,EAWG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG;AACG,IAAA,SAAS,EAAC,WADb;AAEG,IAAA,QAAQ,EAAEN,QAFb;AAGG,IAAA,OAAO,EAAEG,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIlB,KAAK,CAACY,QALV,CAFH,CAXH,CADH,CADH,CADH,EA2BG,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEZ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BH,CADH;AA+BF,CAnHD;;AAqHA,eAAeb,UAAU,CAACW,MAAD,CAAzB","sourcesContent":["import React, { useState,useRef, useEffect } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport Hamburger from './Hamburger';\nimport './Header.style.scss';\nimport { HiMenuAlt3, HiOutlineX } from \"react-icons/hi\";\n\nimport { gsap } from 'gsap';\n\nimport {\n   staggerText,\n   staggerReveal,\n   handleHover,\n   handleHoverExit,\n   staggerRevealClose,\n} from './Animations';\n\nconst Navbar = ({ history, state }) =>\n{\n   let menuLayer = useRef(null);\n   let reveal1 = useRef(null);\n   let reveal2 = useRef(null);\n   \n   useEffect(() => {\n      // If the menu is open and we click the menu button to close it.\n      if (state.clicked === false) {\n         // If menu is closed and we want to open it.\n\n         staggerRevealClose(reveal2, reveal1);\n         // Set menu to display none\n         gsap.to(menuLayer, { duration: 1, css: { display: 'none' } });\n      } else if (\n         state.clicked === true ||\n         (state.clicked === true && state.initial === null)\n      ) {\n         // Set menu to display block\n         gsap.to(menuLayer, { duration: 0, css: { display: 'block' } });\n         //Allow menu to have height of 100%\n         gsap.to([reveal1, reveal2], {\n            duration: 0,\n            opacity: 1,\n            height: '100%',\n            // width: '100%',\n         });\n         staggerReveal(reveal1, reveal2);\n         // fadeInUp(info);\n         // staggerText(line1, line2, line3, line4, line5);\n      }\n   }, [state]);\n\n\n\n\n\n   // State of our Menu\n   const [state2, setState] = useState({\n      initial: false,\n      clicked: null,\n      menuName: <HiMenuAlt3 /> ,\n   });\n   // State of our button\n   const [disabled, setDisabled] = useState(false);\n\n   //Use Effect\n   useEffect(() => {\n      //Listening for page changes.\n      history.listen(() => {\n         setState({ clicked: false, menuName: <HiMenuAlt3 />  });\n      });\n   }, [history]);\n\n   // Toggle menu\n   const handleMenu = () => {\n      disableMenu();\n      if (state.initial === false) {\n         setState({\n            initial: null,\n            clicked: true,\n            menuName: <HiOutlineX/>,\n         });\n      } else if (state.clicked === true) {\n         setState({\n            clicked: !state.clicked,\n            menuName: <HiMenuAlt3/> ,\n         });\n      } else if (state.clicked === false) {\n         setState({\n            clicked: !state.clicked,\n            menuName: <HiOutlineX/>,\n         });\n      }\n   };\n\n   //Determine if out menu button should be disabled\n   const disableMenu = () => {\n      setDisabled(!disabled);\n      setTimeout(() => {\n         setDisabled(false);\n      }, 1200);\n   };\n\n   return (\n      <header>\n         <div className='container'>\n            <div className='wrapper'>\n               <div className='inner-header'>\n                  <div\n            ref={(el) => (reveal1 = el)}\n            className='menu-secondary-background-color'\n         ></div>\n                  <div className='logo'\n                  ref={(el) => (reveal2 = el)}\n                  >\n                     <Link to='/'>GHOFRANE.</Link>\n                  </div>\n\n                  <div className='menu'>\n\n                     <button\n                        className='menu--btn'\n                        disabled={disabled}\n                        onClick={handleMenu}\n                     >\n                        {state.menuName}\n                     </button>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Hamburger state={state} />\n      </header>\n   );\n};\n\nexport default withRouter(Navbar);\n"]},"metadata":{},"sourceType":"module"}