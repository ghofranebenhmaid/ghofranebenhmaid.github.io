{"ast":null,"code":"var _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Sections/Section.component.js\";\nimport React, { useRef } from 'react';\nimport { handleServesReturn, handleServes, handleHoverExit, handleHover } from './Animation';\nimport Title from '../Title/Title';\nimport photography from '../../assets/images/photography.jpg';\nimport typographie from '../../assets/images/typographie.jpg';\nimport coding from '../../assets/images/coding.jpg';\nconst serves = [{\n  name: 'Photography',\n  image: photography\n} //    {\n//       name: 'Typographie',\n//       image: typographie,\n//    },\n//    {\n//       name: 'Coding',\n//       image: coding,\n//    },\n];\n\nconst Section = () => {\n  let servesBackground = useRef(null);\n  let line1 = useRef(null);\n  return React.createElement(\"div\", {\n    className: \"service container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"service_background\",\n    ref: el => {\n      servesBackground = el;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"service_title\",\n    onMouseEnter: e => handleHover(e),\n    onMouseOut: e => handleHoverExit(e),\n    ref: el => line1 = el,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, serves.map(el => React.createElement(\"span\", {\n    key: el.name,\n    onMouseEnter: () => handleServes(el.image, servesBackground),\n    onMouseOut: () => handleServesReturn(servesBackground),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, el.name))));\n};\n\nexport default Section;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Sections/Section.component.js"],"names":["React","useRef","handleServesReturn","handleServes","handleHoverExit","handleHover","Title","photography","typographie","coding","serves","name","image","Section","servesBackground","line1","el","e","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,SAASC,kBAAT,EAA6BC,YAA7B,EAA2CC,eAA3C,EAA2DC,WAA3D,QAA8E,aAA9E;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,MAAMC,MAAM,GAAG,CACZ;AACGC,EAAAA,IAAI,EAAE,aADT;AAEGC,EAAAA,KAAK,EAAEL;AAFV,CADY,CAKf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZe,CAAf;;AAeA,MAAMM,OAAO,GAAG,MAAM;AAClB,MAAIC,gBAAgB,GAAGb,MAAM,CAAC,IAAD,CAA7B;AAED,MAAIc,KAAK,GAAGd,MAAM,CAAC,IAAD,CAAlB;AAEA,SACG;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AACG,IAAA,SAAS,EAAC,oBADb;AAEG,IAAA,GAAG,EAAGe,EAAD,IAAQ;AACVF,MAAAA,gBAAgB,GAAGE,EAAnB;AACF,KAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAQK;AAAK,IAAA,SAAS,EAAC,eAAf;AAEE,IAAA,YAAY,EAAGC,CAAD,IAAOZ,WAAW,CAACY,CAAD,CAFlC;AAGsB,IAAA,UAAU,EAAGA,CAAD,IAAOb,eAAe,CAACa,CAAD,CAHxD;AAIsB,IAAA,GAAG,EAAGD,EAAD,IAASD,KAAK,GAAGC,EAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKN,MAAM,CAACQ,GAAP,CAAYF,EAAD,IACT;AACG,IAAA,GAAG,EAAEA,EAAE,CAACL,IADX;AAEG,IAAA,YAAY,EAAE,MACXR,YAAY,CAACa,EAAE,CAACJ,KAAJ,EAAWE,gBAAX,CAHlB;AAKK,IAAA,UAAU,EAAG,MAAMZ,kBAAkB,CAACY,gBAAD,CAL1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASIE,EAAE,CAACL,IATP,CADF,CANL,CARL,CADH;AAgCF,CArCD;;AAuCA,eAAeE,OAAf","sourcesContent":["import React, { useRef } from 'react';\n\nimport { handleServesReturn, handleServes ,handleHoverExit,handleHover } from './Animation';\n\nimport Title from '../Title/Title';\nimport photography from '../../assets/images/photography.jpg';\nimport typographie from '../../assets/images/typographie.jpg';\nimport coding from '../../assets/images/coding.jpg';\n\nconst serves = [\n   {\n      name: 'Photography',\n      image: photography,\n   },\n//    {\n//       name: 'Typographie',\n//       image: typographie,\n//    },\n//    {\n//       name: 'Coding',\n//       image: coding,\n//    },\n];\n\nconst Section = () => {\n    let servesBackground = useRef(null);\n    \n   let line1 = useRef(null);\n\n   return (\n      <div className='service container'>\n         <div\n            className='service_background'\n            ref={(el) => {\n               servesBackground = el;\n            }}\n         ></div>\n\n           <div className='service_title'\n           \n             onMouseEnter={(e) => handleHover(e)}\n                                 onMouseOut={(e) => handleHoverExit(e)}\n                                 ref={(el) => (line1 = el)}\n           >\n               {serves.map((el) => (\n                  <span\n                     key={el.name}\n                     onMouseEnter={() =>\n                        handleServes(el.image, servesBackground)\n                     }\n                       onMouseOut={ () => handleServesReturn(servesBackground) }\n                       \n                     \n                  >\n                     {el.name}\n                  </span>\n               ))}\n            </div>\n         \n      </div>\n   );\n};\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}