{"ast":null,"code":"import _slicedToArray from \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Slider/Slider.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Title from '../Title/Title';\n\nconst Slider = ({\n  slides\n}) => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        current = _useState2[0],\n        setCurrent = _useState2[1];\n\n  useEffect(() => {\n    // setCurrent((current ) % slides.length)\n    setTimeout(() => setCurrent(current === slides.length - 1 ? 0 : current + 1), 5000); // setCurrent(current === slides.length  ? 0 : current )\n\n    return function () {\n      clearTimeout(current % slides.length);\n    };\n  }, [current]);\n\n  const handleSetClick = event => {\n    const e = event.target.getAttribute('data-slides'); // setCurrent(current  === e ? slides[e] : 'error' );\n\n    if (e) setCurrent(slides[e]);\n    console.log('hallo', e);\n  }; //  if (!Array.isArray(slides) || slides.length <= 0) return null;\n\n\n  return React.createElement(\"section\", {\n    className: \"slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, slides.map((s, i) => React.createElement(\"div\", {\n    // if active slide, include the \"active\" class\n    className: i === current ? 'slide slide-top active' : 'slide',\n    key: s.title // if not active, hide from screen readers for accessibility\n    //  aria-hidden={i !== current}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text--mb--s\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Title, {\n    headingStyle: \"bolder--800\",\n    headingSize: \"heading--h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, s.title)), React.createElement(\"div\", {\n    className: \"text--mb--s\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Title, {\n    headingStyle: \"normal--400\",\n    headingSize: \"heading--small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, s.subtitle))))), React.createElement(\"div\", {\n    className: \"slide flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, Object.keys(slides).map((index, i) => React.createElement(\"span\", {\n    className: i === current ? 'activeSlide active' : 'activeSlide' //  onClick={(event) => handleSetClick(event)}\n    ,\n    onClick: handleSetClick,\n    \"data-slides\": index,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, '0'.concat(Number(index) + 1)))));\n};\n\nexport default Slider;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Slider/Slider.jsx"],"names":["React","useState","useEffect","Title","Slider","slides","current","setCurrent","setTimeout","length","clearTimeout","handleSetClick","event","e","target","getAttribute","console","log","map","s","i","title","subtitle","Object","keys","index","concat","Number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA,oBACEJ,QAAQ,CAAC,CAAD,CADV;AAAA;AAAA,QACrBK,OADqB;AAAA,QACZC,UADY;;AAK5BL,EAAAA,SAAS,CAAC,MAAM;AACV;AACDM,IAAAA,UAAU,CACP,MAAMD,UAAU,CAACD,OAAO,KAAKD,MAAM,CAACI,MAAP,GAAgB,CAA5B,GAAgC,CAAhC,GAAoCH,OAAO,GAAG,CAA/C,CADT,EAEP,IAFO,CAAV,CAFW,CAMb;;AACA,WAAO,YAAY;AAChBI,MAAAA,YAAY,CAACJ,OAAO,GAAGD,MAAM,CAACI,MAAlB,CAAZ;AACF,KAFD;AAGF,GAVQ,EAUN,CAACH,OAAD,CAVM,CAAT;;AAaF,QAAMK,cAAc,GAAIC,KAAD,IACrB;AACG,UAAMC,CAAC,GAAGD,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,aAA1B,CAAV,CADH,CAEG;;AACF,QAAIF,CAAJ,EAAON,UAAU,CAACF,MAAM,CAACQ,CAAD,CAAP,CAAV;AAEPG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,CAArB;AAEA,GARH,CAlB8B,CA6B5B;;;AAEA,SAEG;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIR,MAAM,CAACa,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAET;AACG;AACA,IAAA,SAAS,EAAEA,CAAC,KAAKd,OAAN,GAAiB,wBAAjB,GAA4C,OAF1D;AAGG,IAAA,GAAG,EAAEa,CAAC,CAACE,KAHV,CAIG;AACA;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,KAAD;AACG,IAAA,YAAY,EAAC,aADhB;AAEG,IAAA,WAAW,EAAC,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIF,CAAC,CAACE,KAJN,CADH,CADH,EASG;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,KAAD;AACG,IAAA,YAAY,EAAC,aADhB;AAEG,IAAA,WAAW,EAAC,gBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIF,CAAC,CAACG,QAJN,CADH,CATH,CARH,CAFF,CAFJ,EAmCM;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACUC,MAAM,CAACC,IAAP,CAAYnB,MAAZ,EAAoBa,GAApB,CAAwB,CAACO,KAAD,EAAQL,CAAR,KACtB;AAEG,IAAA,SAAS,EACNA,CAAC,KAAKd,OAAN,GACK,oBADL,GAEK,aALX,CAOG;AAPH;AAQI,IAAA,OAAO,EAAEK,cARb;AASG,mBAAac,KAThB;AAUG,IAAA,GAAG,EAAGA,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcI,IAAIC,MAAJ,CAAWC,MAAM,CAACF,KAAD,CAAN,GAAgB,CAA3B,CAdJ,CADF,CADV,CAnCN,CAFH;AA4DF,CA3FD;;AA6FA,eAAerB,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Title from '../Title/Title';\n\nconst Slider = ({ slides }) => {\n   const [current, setCurrent] = useState(0);\n   \n   \n\n   useEffect(() => {\n         // setCurrent((current ) % slides.length)\n        setTimeout(\n           () => setCurrent(current === slides.length - 1 ? 0 : current + 1),\n           5000\n        );\n      // setCurrent(current === slides.length  ? 0 : current )\n      return function () {\n         clearTimeout(current % slides.length);\n      };\n   }, [current]);\n\n   \n const handleSetClick = (event) =>\n   {\n      const e = event.target.getAttribute('data-slides');\n      // setCurrent(current  === e ? slides[e] : 'error' );\n    if (e) setCurrent(slides[e]);\n\n    console.log('hallo' ,e);\n    \n   };\n    \n\n   //  if (!Array.isArray(slides) || slides.length <= 0) return null;\n\n   return (\n\n      <section className='slider'>\n         \n         {slides.map((s, i) => (\n           \n            <div\n               // if active slide, include the \"active\" class\n               className={i === current  ? 'slide slide-top active' : 'slide'}\n               key={s.title}\n               // if not active, hide from screen readers for accessibility\n               //  aria-hidden={i !== current}\n            >\n               \n               <div>\n                  <div className='text--mb--s'>\n                     <Title\n                        headingStyle='bolder--800'\n                        headingSize='heading--h2'\n                     >\n                        {s.title}\n                     </Title>\n                  </div>\n                  <div className='text--mb--s'>\n                     <Title\n                        headingStyle='normal--400'\n                        headingSize='heading--small'\n                     >\n                        {s.subtitle}\n                     </Title>\n                  </div>\n               \n               </div>\n              \n            </div>\n                \n         )) }\n            <div className='slide flex'>\n                     {Object.keys(slides).map((index, i) => (\n                        <span\n\n                           className={\n                              i === current\n                                 ? 'activeSlide active'\n                                 : 'activeSlide'\n                           }\n                           //  onClick={(event) => handleSetClick(event)}\n                            onClick={handleSetClick}\n                           data-slides={index}\n                           key={ index }\n                           \n           \n                        >\n                           {'0'.concat(Number(index) + 1)}\n                        </span>\n                     ))}\n                  </div>\n      </section>\n\n   );\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}