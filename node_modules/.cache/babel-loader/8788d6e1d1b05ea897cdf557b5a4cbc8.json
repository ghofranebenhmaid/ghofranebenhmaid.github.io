{"ast":null,"code":"var _jsxFileName = \"/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Button/Button.jsx\";\nimport React from 'react';\nconst STYLES = ['btn--primary--outline', 'btn--warning--outline', 'btn--danger--outline', 'btn--success--outline', 'btn--simple--solid', 'btn--primary--solid', 'btn--warning--solid', 'btn--danger--solid', 'btn--success--solid'];\nconst SIZES = ['btn--small', 'btn--medium', 'btn--large'];\n\nconst Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return React.createElement(\"button\", {\n    className: \"btn \".concat(checkButtonStyle, \" \").concat(checkButtonSize),\n    onClick: onClick,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, children);\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/ghofranebenhmaid/Desktop/ghofrane.dev/src/components/Button/Button.jsx"],"names":["React","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,MAAM,GAAG,CACZ,uBADY,EAEZ,uBAFY,EAGZ,sBAHY,EAIZ,uBAJY,EAKZ,oBALY,EAOZ,qBAPY,EAQZ,qBARY,EASZ,oBATY,EAUX,qBAVW,CAAf;AAeA,MAAMC,KAAK,GAAG,CAAC,YAAD,EAAc,aAAd,EAA6B,YAA7B,CAAd;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA,WAA3B;AAAwCC,EAAAA;AAAxC,CAAD,KACf;AACI,QAAMC,gBAAgB,GAAGR,MAAM,CAACS,QAAP,CAAgBH,WAAhB,IAA+BA,WAA/B,GAA6CN,MAAM,CAAC,CAAD,CAA5E;AACA,QAAMU,eAAe,GAAGT,KAAK,CAACQ,QAAN,CAAeF,UAAf,IAA6BA,UAA7B,GAA0CN,KAAK,CAAC,CAAD,CAAvE;AACD,SACG;AAAQ,IAAA,SAAS,gBAASO,gBAAT,cAA6BE,eAA7B,CAAjB;AAAiE,IAAA,OAAO,EAAEL,OAA1E;AAAmF,IAAA,IAAI,EAAED,IAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,QADJ,CADH;AAKF,CATD;;AAWA,eAAeD,MAAf","sourcesContent":["import React from 'react';\n\n\nconst STYLES = [\n   'btn--primary--outline',\n   'btn--warning--outline',\n   'btn--danger--outline',\n   'btn--success--outline',\n   'btn--simple--solid',\n   \n   'btn--primary--solid',\n   'btn--warning--solid',\n   'btn--danger--solid',\n    'btn--success--solid',\n   \n   \n];\n\nconst SIZES = ['btn--small','btn--medium', 'btn--large']\nconst Button = ({ children, type, onClick, buttonStyle, buttonSize }) =>\n{\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n   return (\n      <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick} type={type}>\n         {children}\n      </button>\n   );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}